server:
  port: 8086

spring:
  application:
    name: contract-service
  datasource:
    url: jdbc:postgresql://localhost:5432/db?currentSchema=contract
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: password
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    url: jdbc:postgresql://localhost:5432/db?currentSchema=contract
    password: password
    user: postgres
  cache:
    cache-names: dictionary,dictionaryByCode
    caffeine:
      spec: initialCapacity=0, maximumSize=100, expireAfterAccess=1m


eureka:
  instance:
    status-page-url-path: /actuator/info
    health-check-url-path: /actuator/health
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

grpc:
  client:
    dictionary-service-grpc:
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiation-type: plaintext
      address: 'discovery:///dictionary-service-grpc'


springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /api-docs-ui
  enable-kotlin: false

management:
  server:
    port: 8086
  info:
    os:
      enabled: true
    java:
      enabled: true
  metrics:
    enable:
      tomcat: true
      jvm: true
      process: true
      hikaricp: true
      system: true
      jdbc: true
      logback: true
    distribution:
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99, 0.999
      slo:
        http.server.requests: 1ms, 10ms, 50ms
      percentiles-histogram:
        http.server.requests: true
  endpoint:
    loggers:
      enabled: true
    metrics:
      enabled: true
      distribution:
        slo:
          http:
            server:
              requests: 1ms, 10ms, 50ms
        percentiles-histogram:
          http:
            server:
              requests: true
        percentiles:
          http:
            server:
              requests: 0.5, 0.9, 0.95, 0.99, 0.999
    health:
      show-details: always
    prometheus:
      enabled: true
    caches:
      enabled: true
  endpoints:
    web:
      exposure:
         include: '*' 
  tracing:
    sampling:
      probability: 1.0

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"