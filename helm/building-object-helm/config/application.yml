server:
  port: 8080

spring:
  application:
    name: building-object-service
  cloud:
    kubernetes:
      discovery:
        all-namespaces: true
        service-labels:
          spring-boot: true
  datasource:
    url: jdbc:postgresql://localhost:5432/db?currentSchema=building_object
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: password
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    url: jdbc:postgresql://localhost:5432/db?currentSchema=building_object
    password: password
    user: postgres

eureka:
  instance:
    status-page-url-path: /actuator/info
    health-check-url-path: /actuator/health
    preferIpAddress: true
  client:
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://discovery-service:8761/eureka

grpc:
  client:
    dictionary-service-grpc:
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiation-type: plaintext
      address: dns:///dictionary-service-grpc:9090

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /api-docs-ui
  enable-kotlin: false

management:
  server:
    port: 8080
  info:
    os:
      enabled: true
    java:
      enabled: true
  metrics:
    enable:
      tomcat: true
      jvm: true
      process: true
      hikaricp: true
      system: true
      jdbc: true
      logback: true
    distribution:
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99, 0.999
      slo:
        http.server.requests: 1ms, 10ms, 50ms
      percentiles-histogram:
        http.server.requests: true
  endpoint:
    loggers:
      enabled: true
    metrics:
      enabled: true
      distribution:
        slo:
          http:
            server:
              requests: 1ms, 10ms, 50ms
        percentiles-histogram:
          http:
            server:
              requests: true
        percentiles:
          http:
            server:
              requests: 0.5, 0.9, 0.95, 0.99, 0.999
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"